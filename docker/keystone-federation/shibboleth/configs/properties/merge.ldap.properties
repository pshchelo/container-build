idp.authn.LDAP.authenticator                   = bindSearchAuthenticator
idp.authn.LDAP.ldapURL                         = ldap://ldap:389
idp.authn.LDAP.useStartTLS                     = false
idp.authn.LDAP.useSSL                          = false

idp.authn.LDAP.sslConfig                       = jvmTrust
idp.authn.LDAP.returnAttributes                 = cn,mail,description
idp.authn.LDAP.baseDN                           = ou=Users,dc=openstack,dc=com
idp.authn.LDAP.subtreeSearch                    = true
idp.authn.LDAP.userFilter                       = (cn={user})
idp.authn.LDAP.bindDN                           = cn=admin,dc=openstack,dc=com
idp.authn.LDAP.bindDNCredential                 = r00tme
idp.authn.LDAP.dnFormat                         = cn=%s,ou=Users,dc=openstack,dc=com

idp.attribute.resolver.LDAP.ldapURL             = %{idp.authn.LDAP.ldapURL}
idp.attribute.resolver.LDAP.connectTimeout      = %{idp.authn.LDAP.connectTimeout:PT3S}
idp.attribute.resolver.LDAP.responseTimeout     = %{idp.authn.LDAP.responseTimeout:PT3S}
idp.attribute.resolver.LDAP.baseDN              = %{idp.authn.LDAP.baseDN:undefined}
idp.attribute.resolver.LDAP.bindDN              = %{idp.authn.LDAP.bindDN:undefined}
idp.attribute.resolver.LDAP.bindDNCredential    = %{idp.authn.LDAP.bindDNCredential:undefined}
idp.attribute.resolver.LDAP.useStartTLS         = false
idp.attribute.resolver.LDAP.trustCertificates   = %{idp.authn.LDAP.trustCertificates:undefined}
idp.attribute.resolver.LDAP.searchFilter        = (cn=$resolutionContext.principal)
idp.attribute.resolver.LDAP.returnAttributes    = cn,mail,description
